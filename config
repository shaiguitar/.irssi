servers = (
  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.net"; chatnet = "EFNet"; port = "6667"; },
  { address = "irc.undernet.org"; chatnet = "Undernet"; port = "6667"; },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { address = "irc.freenode.net"; chatnet = "freenode"; port = "6667"; },
  { address = "irc.gnome.org"; chatnet = "GIMPNet"; port = "6667"; },
  { address = "irc.ptlink.net"; chatnet = "PTlink"; port = "6667"; },
  { address = "irc.sorcery.net"; chatnet = "SorceryNet"; port = "6667"; },
  { address = "irc.hashmark.net"; chatnet = "Hashmark"; port = "6667"; },
  { address = "irc.ptnet.org"; chatnet = "PTnet"; port = "6667"; },
  { address = "irc.azzurra.org"; chatnet = "AzzurraNET"; port = "6667"; },
  { address = "silc.pspt.fi"; chatnet = "SILC"; port = "706"; },
  {
    address = "localhost";
    chatnet = "local_bitlbee";
    port = "6668";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
    max_whois = "30";
  };
  freenode = {
    type = "IRC";
    autosendcmd = "/^msg nickserv identify password;wait 2000";
    max_kicks = "4";
    max_msgs = "1";
    max_modes = "4";
    max_whois = "1";
  };
  GIMPNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  PTlink = {
    type = "IRC";
    max_kicks = "1";
    max_modes = "6";
    max_msgs = "30";
    max_whois = "1";
  };
  SorceryNet = {
    type = "IRC";
    max_kicks = "30";
    max_modes = "6";
    max_msgs = "30";
    max_whois = "30";
  };
  Hashmark = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
    max_whois = "30";
  };
  PTnet = {
    type = "IRC";
    max_kicks = "30";
    max_modes = "13";
    max_msgs = "10";
    max_whois = "30";
  };
  AzzurraNET = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
  };
  SILC = { type = "SILC"; };
  local_bitlbee = {
    type = "IRC";
    nick = "shaiguitar";
    autosendcmd = "/^msg &bitlbee identify password;wait 2000";
  };
};

channels = (
  { name = "&bitlbee"; chatnet = "local_bitlbee"; autojoin = "yes"; },
  { name = "#engineyard"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#irssi"; chatnet = "freenode"; },
  { name = "#ruby-fog"; chatnet = "freenode"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  mi = "/me";
  ADDALLCHANNELS = "script exec foreach my \\$channel (Irssi::channels()) { Irssi::command(\"channel add -auto \\$channel->{name} \\$channel->{server}->{tag} \\$channel->{key}\")\\;}";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $cumode$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "always";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_2 = {
      items = {
        barstart = { priority = "100"; };
        awl_2 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_3 = {
      items = {
        barstart = { priority = "100"; };
        awl_3 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_4 = {
      items = {
        barstart = { priority = "100"; };
        awl_4 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_5 = {
      items = {
        barstart = { priority = "100"; };
        awl_5 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Shai Rosenfeld";
    user_name = "shaiguitar";
    nick = "shaiguitar";
    awaylog_level = "never";
    timestamp_format = "%d-%H:%M";
    log_timestamp = "%F %T %Z/%z ";
    use_proxy = "yes";
  };
  "fe-common/core" = {
    window_history = "yes";
    timestamps = "yes";
    activity_hide_level = "";
    autolog = "yes";
    autolog_path = "irclogs-ey/$0/${0}-%b-%Y.log";
    hilight_color = "%Y";
    hilight_act_color = "%3";
    hilight_nick_matches = "no";
    term_charset = "utf-8";
    show_names_on_join = "yes";
    bell_beeps = "yes";
    beep_when_window_active = "no";
    beep_when_away = "yes";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    hilight_level = "ALL";
    activity_hilight_level = "MSGS DCCMSGS";
    autolog_level = "all -crap -clientcrap -ctcps -snotes";
    activity_hide_targets = "";
  };
  "irc/core" = { lag_max_before_disconnect = "60"; };
  "fe-text" = {
    lag_min_show = "30000ms";
    scrollback_lines = "50000";
    actlist_sort = "refnum";
  };
  "perl/core/scripts" = {
    bitlbee_send_typing = "0";
    first_away_message = "Idling.";
    second_away_message = "1800";
    first_away_timeout = "300";
    awl_display_key = "$Q%K|%n$H$C$S";
    awl_block = "-15";
    completion_breakup_nicks = "ey-cf-support ey-cf-sysadmin ey-cf-sam ey-cf-spam ey-cf-testing";
    campfire_hack_nicks = "ey-camp-coffeesh ey-camp-dba ey-camp-firemen ey-camp-groupon ey-camp-ops ey-camp-platform ey-camp-professi ey-camp-sam ey-camp-support ey-camp-sysadmin ey-camp-testing";
  };
  proxy = {
    irssiproxy_password = "notheredude.";
    irssiproxy_ports = "freenode=7778  local_bitlbee=7777 ";
  };
};
ignores = (
  { mask = "help"; level = "ALL"; },
  { mask = "shining_star_ever"; level = "ALL"; },
  { mask = "cl"; level = "ALL"; }
);
logs = { };
hilights = (
  {
    text = "shai";
    level = "4194303";
    color = "%1";
    nick = "no";
    word = "no";
    fullword = "yes";
  },
  { text = "eyhelp"; color = "%1"; nick = "no"; word = "yes"; },
  { text = "emergency"; color = "%1"; nick = "no"; word = "yes"; },
  { text = "eyadm"; color = "%1"; nick = "no"; word = "yes"; },
  {
    text = "sysadmin";
    level = "70";
    color = "%1";
    nick = "no";
    word = "yes";
  },
  { text = "eyapp"; color = "%1"; nick = "no"; word = "no"; },
  { text = "shaiguitar"; nick = "yes"; word = "yes"; }
);
keyboard = (
  { key = "meta-[M"; id = "command"; data = "mouse_xterm "; },
  { key = "meta-c"; id = "change_window"; data = "13"; },
  { key = "meta-1"; id = "change_window"; data = "1"; },
  { key = "meta-2"; id = "change_window"; data = "2"; },
  { key = "meta-3"; id = "change_window"; data = "3"; },
  { key = "meta-4"; id = "change_window"; data = "4"; },
  { key = "meta-5"; id = "change_window"; data = "5"; },
  { key = "meta-6"; id = "change_window"; data = "6"; },
  { key = "meta-7"; id = "change_window"; data = "7"; },
  { key = "meta-8"; id = "change_window"; data = "8"; },
  { key = "meta-9"; id = "change_window"; data = "9"; },
  { key = "meta-0"; id = "change_window"; data = "10"; },
  { key = "meta-q"; id = "change_window"; data = "27"; },
  { key = "meta-w"; id = "change_window"; data = "33"; },
  { key = "meta-e"; id = "change_window"; data = "15"; },
  { key = "meta-r"; id = "change_window"; data = "28"; },
  { key = "meta-t"; id = "change_window"; data = "30"; },
  { key = "meta-y"; id = "change_window"; data = "35"; },
  { key = "meta-u"; id = "change_window"; data = "31"; },
  { key = "meta-i"; id = "change_window"; data = "19"; },
  { key = "meta-o"; id = "change_window"; data = "25"; },
  { key = "meta-p"; id = "change_window"; data = "26"; },
  { key = "meta-a"; id = "change_window"; data = "11"; },
  { key = "meta-s"; id = "change_window"; data = "29"; },
  { key = "meta-d"; id = "change_window"; data = "14"; },
  { key = "meta-f"; id = "change_window"; data = "16"; },
  { key = "meta-g"; id = "change_window"; data = "17"; },
  { key = "meta-h"; id = "change_window"; data = "18"; },
  { key = "meta-j"; id = "change_window"; data = "20"; },
  { key = "meta-k"; id = "change_window"; data = "21"; },
  { key = "meta-l"; id = "change_window"; data = "22"; },
  { key = "meta-\\;"; id = "change_window"; data = "30"; },
  { key = "meta-z"; id = "change_window"; data = "36"; },
  { key = "meta-x"; id = "change_window"; data = "34"; },
  { key = "meta-v"; id = "change_window"; data = "32"; },
  { key = "meta-b"; id = "change_window"; data = "12"; },
  { key = "meta-n"; id = "change_window"; data = "24"; },
  { key = "meta-m"; id = "change_window"; data = "23"; },
  { key = "meta-,"; id = "change_window"; data = "38"; },
  { key = "meta-."; id = "change_window"; data = "39"; },
  { key = "meta-/"; id = "change_window"; data = "40"; },
  { key = "^B"; id = "active_window"; data = ""; },
  { key = "meta-A"; id = "change_window"; data = "37"; },
  { key = "meta-B"; id = "change_window"; data = "38"; },
  { key = "meta-C"; id = "change_window"; data = "39"; },
  { key = "meta-D"; id = "change_window"; data = "40"; }
);
windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };

};
mainwindows = { 1 = { first_line = "1"; lines = "80"; }; };
